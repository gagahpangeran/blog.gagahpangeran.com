name: Deploy and Release
on:
  push:
    tags:
      - "*"

jobs:
  changelog:
    name: Update changelog
    runs-on: ubuntu-latest

    steps:
      - name: Get Tag
        id: get-tag
        run: echo "::set-output name=tag::$(echo ${{ github.ref }} | cut -d '/' -f3)"

      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: master
          submodules: recursive

      - name: Setup git
        run: |
          git config --global user.name "Github Actions"
          git config --global user.email "actions@users.noreply.github.com"

      - name: Update submodule
        run: git submodule update --remote

      - name: Rename changelog `Next` to current tag
        run: |
          git -C content/changelog checkout master
          mv content/changelog/Next.md content/changelog/${{ steps.get-tag.outputs.tag }}.md

      - name: Commit and push new changelog tag
        run: |
          git -C content/changelog add .
          git -C content/changelog commit -m "Rename Next changelog on tag ${{ steps.get-tag.outputs.tag }}"
          git -C content/changelog push origin master

      - name: Commit and push updated submodule to master
        run: |
          git add .
          git commit -m "Update changelog submodule for tag ${{ steps.get-tag.outputs.tag }}"
          git push origin master

  deploy:
    name: Build and deploy website
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Get local node modules directory path
        id: yarn-node-modules-path
        run: echo "::set-output name=dir::$(pwd)/node_modules"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ${{ steps.yarn-node-modules-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install netlify cli
        run: yarn global add netlify-cli

      - name: Install dependencies
        run: yarn

      - name: Build app
        run: yarn build

      - name: Deploy to netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: netlify deploy --prod --dir=public

  release:
    needs: deploy
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Release tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: Please visit <https://blog.gagahpangeran.com>!
